version: '3.1'
services:
  rabbit:
    #hostname: rabbit
    #image: rabbitmq:3-management
    #volumes:
    #  - './rabbit/app:/app'  
    #ports:
     # - "5672:5672"
      #- "15672:15672"
    #networks:
     # lb7_network:
     #   ipv4_address: '${RABBIT_IP}'
    #restart: unless-stopped
    hostname: rabbit
    build: ./rabbit
    volumes:
      - './rabbit/certs:/certs'  
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5
    networks:
      lb7_network:
        ipv4_address: '${RABBIT_IP}'
    restart: unless-stopped
     
  delivery:
    hostname: delivery
    build: ./delivery
    volumes:
      - './delivery/app:/app'  
    expose:
      - '${GUNICORN_PORT}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    networks:
      lb7_network:
        ipv4_address: '${DELIVERY_IP}'
    restart: unless-stopped
    depends_on:
      rabbit:
        condition: service_healthy
    
  order:
    hostname: order
    build: ./order
    volumes:
      - './order/app:/app'  
    expose:
      - '${GUNICORN_PORT}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    networks:
      lb7_network:
        ipv4_address: '${ORDER_IP}'
    restart: unless-stopped
    depends_on:
      rabbit:
        condition: service_healthy
    
  machine:
    hostname: machine
    build: ./machine
    volumes:
      - './machine/app:/app'  
    expose:
      - '${GUNICORN_PORT}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    networks:
      lb7_network:
        ipv4_address: '${MACHINE_IP}'
    restart: unless-stopped
    depends_on:
      rabbit:
        condition: service_healthy
    
  payment:
    hostname: payment
    build: ./payment
    volumes:
      - './payment/app:/app'  
    expose:
      - '${GUNICORN_PORT}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    networks:
      lb7_network:
        ipv4_address: '${PAYMENT_IP}'
    restart: unless-stopped
    depends_on:
      rabbit:
        condition: service_healthy
    
  haproxy:
    build: ./haproxy
    ports:
      - '${HAPROXY_PORT}:${HAPROXY_PORT}'
      - '${HAPROXY_STATS_PORT}:${HAPROXY_STATS_PORT}'
    expose:
      - '${HAPROXY_PORT}'
      - '${HAPROXY_STATS_PORT}'
    networks:
      lb7_network:
        ipv4_address: '${HAPROXY_IP}'
    environment:
      - 'CLIENT_IP=${CLIENT_IP}'
      - 'CLIENT_PORT=${GUNICORN_PORT}'
      - 'DELIVERY_IP=${DELIVERY_IP}'
      - 'DELIVERY_PORT=${GUNICORN_PORT}'
      - 'PAYMENT_IP=${PAYMENT_IP}'
      - 'PAYMENT_PORT=${GUNICORN_PORT}'
      - 'ORDER_IP=${ORDER_IP}'
      - 'ORDER_PORT=${GUNICORN_PORT}'    
      - 'HAPROXY_PORT=${HAPROXY_PORT}'
      - 'HAPROXY_STATS_PORT=${HAPROXY_STATS_PORT}'
    restart: unless-stopped
    depends_on:
      rabbit:
        condition: service_healthy

  client:
    hostname: client
    build: ./client    
    volumes:
      - './client/app:/app'  
    expose:
      - '${GUNICORN_PORT}'
    environment:
      GUNICORN_PORT: '${GUNICORN_PORT}'
      SQLALCHEMY_DATABASE_URI: '${SQLALCHEMY_SQLITE_DATABASE_URI}'
      SQLALCHEMY_TRACK_MODIFICATIONS: '${SQLALCHEMY_TRACK_MODIFICATIONS}'
    networks:
      lb7_network:
        ipv4_address: '${CLIENT_IP}'
    restart: unless-stopped
    depends_on:
      - delivery
      - rabbit
      - payment
      - order
      - machine
      - haproxy

networks:
  lb7_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: '${NETWORK_SUBNET}'